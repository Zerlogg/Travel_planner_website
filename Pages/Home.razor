@page "/home"
@inject IJSRuntime js
@inject DataContext Context
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavigationManager
@inject ISnackbar Snackbar
@inject IDialogService DialogService
@attribute [Authorize]

<AuthorizeView>
    <Authorized>
        @if (currentUser != null)
        {
            <MudPaper Class="mud-width-full mb-14 rounded mud-theme-primary" Style="height:260px;">
                <MudContainer class="d-flex flex-column justify-center align-center pb-2" style="height:100%" Fixed="true">
                    <MudText Typo="Typo.h2"><b>Welcome @currentUser.UserName to Traveling Trips!</b></MudText>
                    <MudText Typo="Typo.h4" Class="mt-2">Plan your next travel today</MudText>
                </MudContainer>
            </MudPaper>
        }

        <MudContainer Class="mb-14 pa-0">
            <MudContainer Class="d-flex mb-6 pa-0">
                <MudText Typo="Typo.h5" Class="pr-4">Your recently created trips</MudText>
                <MudButton Variant="Variant.Filled" StartIcon="@Icons.Material.Filled.Add" Color="Color.Primary" Href="/travelcreate">Create</MudButton>
            </MudContainer>

            <MudContainer class="d-inline-flex gap-3 justify-left px-0 flex-wrap" Fixed="true">
                @if (_travels.Any())
                {
                    @foreach (var travel in _travels.Take(4))
                    {
                        <MudCard Style="width: 308px;" Class="cursor-pointer" @onclick="() => NavigateToDetails(travel.Id)">
                            @if (travel != null)
                            {
                                string imageUrl = !string.IsNullOrEmpty(travel.Image) ? travel.Image : "/Images/default-image.jpg";

                                <MudCardMedia Image="@imageUrl" Height="160" />
                            }
                            <MudCardContent Class="pb-0">
                                <MudText Typo="Typo.h6" Class="text-ellipsis">Trip to @travel.City</MudText>
                                <MudText Typo="Typo.body2" Class="pt-1 text-ellipsis">@travel.Description</MudText>
                                <MudText Typo="Typo.body2" Class="pt-2">@($"{travel.StartDate:dd.MM.yyyy} - {travel.EndDate:dd.MM.yyyy}")</MudText>
                            </MudCardContent>
                            <MudCardActions>
                                <MudIconButton Icon="@Icons.Material.Filled.PictureAsPdf" Color="Color.Default" @onclick='@( () => DownloadFile(travel.Id, $"Your trip to {travel.City}.pdf") )'/>
                                <MudIconButton Icon="@Icons.Material.Filled.Delete" Color="Color.Default" @onclick="() => DeleteTravel(travel.Id)"/>
                                <MudSpacer/>
                                <MudIconButton Icon="@Icons.Material.Filled.Edit" Color="Color.Default" @onclick="() => EditTravel(travel.Id)"/>
                            </MudCardActions>
                        </MudCard>
                    }
                }
                else
                {
                    <MudContainer class="d-flex flex-column justify-center align-center" Fixed="true">
                        <MudText Typo="Typo.h5">You haven't created any trips yet</MudText>
                    </MudContainer>
                }
            </MudContainer>
        </MudContainer>

        <MudContainer Class="mb-6 pa-0">
            <MudContainer Class="d-flex pb-4 pa-0 align-center">
                <MudText Typo="Typo.h5" Class="pr-4">Where you want to go next?</MudText>
                <MudButton Variant="Variant.Filled" StartIcon="@Icons.Material.Filled.Explore" Color="Color.Primary" Href="/map">Explore</MudButton>
            </MudContainer>
            <MudContainer id="map" style="height: 500px; width: 100%;" Class="rounded"/>
        </MudContainer>
    
    </Authorized>
</AuthorizeView>